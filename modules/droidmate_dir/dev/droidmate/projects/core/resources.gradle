// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2016 Konrad Jamrozik
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// email: jamrozik@st.cs.uni-saarland.de
// web: www.droidmate.org
import com.konradjamrozik.IterableExtensions

// Ensure BuildKt.monitored_apis_txt is available at runtime as a resource.
processResources.configure { Copy copy -> copy.from(project(":projects").file("resources"))}

processResources.dependsOn(
  "pullMonitorApk_api19",
  "pullMonitorApk_api23", 
  "pullUiautomatorDaemonJar", 
  "pullUiautomator2DaemonApk", 
  "pullUiautomator2DaemonTestApk"
)

processTestResources.dependsOn(
  "pullApkFixtures", 
  "inlineMonitoredApkFixture_api19",
  "inlineMonitoredApkFixture_api23"
)

clean.dependsOn(
  "cleanMonitorApk_api19",
  "cleanMonitorApk_api23",
  "cleanUiautomatorDaemon", 
  "cleanUiautomator2Daemon",
  "cleanApkFixtures"
)

ext.coreResDir = IterableExtensions.findSingle(
  sourceSets.main.resources.srcDirs.findAll {it.path.contains(project.name)} as Set<File>)
apply from: file("monitor.gradle")
apply from: file("uiaDaemon.gradle")
apply from: file("uia2daemon.gradle")
apply from: file("apkFixtures.gradle")

