// Copyright (c) 2012-2016 Saarland University
// All rights reserved.
//
// Author: Konrad Jamrozik, jamrozik@st.cs.uni-saarland.de
//
// This file is part of the "DroidMate" project.
//
// www.droidmate.org
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

group 'org.droidmate'
version 'dev'

apply plugin: 'application'
mainClassName = "org.droidmate_usage_examples.Main"

apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  
  // mavenLocal(), i.e. your local maven repository, has to contain droidmate. 
  // To install it there, run:
  //
  //   git clone https://github.com/konrad-jamrozik/droidmate.git
  //   cd droidmate/dev/droidmate
  //   gradlew build install
  //
  mavenLocal()
  maven { url "https://jitpack.io" }
  mavenCentral()
}

dependencies {
  
  // This dependency is supposed to come from mavenLocal(). See comment on "mavenLocal()" above.
  compile "org.droidmate:droidmate:dev"
  
  compile 'com.google.guava:guava:19.0'
  testCompile 'junit:junit:4.12'
  
}

task debug {Task it ->
  it.group = "help"
  doLast {
    println "sourceSets.test.compileClasspath"
    sourceSets.test.compileClasspath.each {println it}
    println "sourceSets.test.runtimeClasspath"
    sourceSets.test.runtimeClasspath.each {println it}
  }
}

allprojects {

  it.afterEvaluate {

    tasks.withType(Test) {Test testTask ->

      testTask.testLogging.events.add(TestLogEvent.FAILED)
      testTask.testLogging.exceptionFormat = TestExceptionFormat.FULL

      testTask.afterSuite {TestDescriptor td, TestResult tr ->

        if (td.name.contains("Test Run") && tr.successfulTestCount == tr.testCount)
          println "==> All ${tr.successfulTestCount} tests passed."
      }

    }
  }
}