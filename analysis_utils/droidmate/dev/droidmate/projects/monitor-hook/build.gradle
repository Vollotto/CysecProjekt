// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2016 Konrad Jamrozik
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// email: jamrozik@st.cs.uni-saarland.de
// web: www.droidmate.org
import org.droidmate.buildsrc.BuildKt

/**
 *  This project contains sources to be edited by anyone who wants to provide custom API call hooking logic.
 *  For more documentation, please see org.droidmate.monitor.MonitorHookTemplate
 */

apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7
compileJava.configure { JavaCompile jc ->
  // See explanation of this in build.gradle of 'monitor-template' project.
  jc.options.compilerArgs += "-Xlint:-options"
}

dependencies {
  // depending here only API 23 android.jar, hoping that it can be used without problems for API 19.
  compileOnly files(BuildKt.android_jar_api23.toString())
}

task makeMonitorHookFromTemplateIfNotPresent {

  File monitorHookTemplateSource = sourceSets.main.java.find {it.name == "MonitorHookTemplate.java"} as File
  File monitorHookSource = sourceSets.main.java.find {it.name == "MonitorHook.java"} as File

  assert monitorHookTemplateSource.file

  doFirst {
    if (monitorHookSource == null)
      monitorHookSource = new File(monitorHookTemplateSource.parent, "MonitorHook.java")
    if (!monitorHookSource.file)
    {
      println "No MonitorHook.java detected. Generating it from MonitorHookTemplate.java."
      PrintWriter wr = new FileWriter(monitorHookSource).newPrintWriter()
      monitorHookTemplateSource.readLines()
        .each {String line ->
        if (!line.contains("// !!!!!"))
          wr.println(line.replace("Template", ""))
      }
      wr.close()
    }
    assert monitorHookSource.file
  }

}

compileJava.dependsOn tasks.makeMonitorHookFromTemplateIfNotPresent

apply from: project(":projects").file("maven.gradle")