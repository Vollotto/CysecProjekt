// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2016 Konrad Jamrozik
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// email: jamrozik@st.cs.uni-saarland.de
// web: www.droidmate.org
import org.droidmate.buildsrc.BuildKt

File uia2DaemonProjectDir = new File(rootDir, BuildKt.uia2_daemon_relative_project_dir.path)
assert uia2DaemonProjectDir.isDirectory()

File uia2DaemonBuildDir = new File("$uia2DaemonProjectDir/build")
String uia2DaemonName = BuildKt.uia2_daemon_project_name

String uia2DaemonApkOriginalName = "${uia2DaemonName}-debug.apk"
task pullUiautomator2DaemonApk(type: Copy, dependsOn: "assembleUiautomator2Daemon") {
  Copy copy ->
    def uiaDaemonApk = file(new File(uia2DaemonBuildDir.absolutePath + "/outputs/apk/", uia2DaemonApkOriginalName))
    copy.from(uiaDaemonApk).into(coreResDir).rename("-debug.apk", ".apk")
}

String uia2DaemonTestApkOriginalName = "${uia2DaemonName}-debug-androidTest.apk"
task pullUiautomator2DaemonTestApk(type: Copy, dependsOn: "assembleUiautomator2Daemon") {
  Copy copy ->
    def uiaDaemonTestApk = file(new File(uia2DaemonBuildDir.absolutePath + "/outputs/apk/", uia2DaemonTestApkOriginalName))
    copy.from(uiaDaemonTestApk).into(coreResDir).rename("debug-androidTest.apk", "test.apk")
}

task assembleUiautomator2Daemon(type: GradleBuild) { GradleBuild task ->
  task.buildFile = new File(uia2DaemonProjectDir, "build.gradle")
  task.tasks = ['assemble', 'assembleAndroidTest']
}

String uia2DaemonApkName = "${uia2DaemonName}.apk"
String uia2DaemonTestApkName = "${uia2DaemonName}-test.apk"

task cleanUiautomator2Daemon(type: Delete, dependsOn: "cleanExternalBuild_uiautomator2Daemon") {
  delete file(new File(coreResDir as File, uia2DaemonApkName))
  delete file(new File(coreResDir as File, uia2DaemonTestApkName))
}

task cleanExternalBuild_uiautomator2Daemon(type: GradleBuild) { GradleBuild task ->
  task.buildFile = new File(uia2DaemonProjectDir, "build.gradle")
  task.tasks = ["clean"]
}